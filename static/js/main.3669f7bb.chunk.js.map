{"version":3,"sources":["components/Table.js","utils/index.js","App.js","index.js"],"names":["Table","props","attr","className","columns","map","item","index","push","prop","key","label","data","index2","React","isValidElement","cloneElement","RGBToCMYK","str","match","r","g","b","c","m","y","k","minCMY","Math","min","parseInt","HextoRGB","color","toLowerCase","test","length","colorNew","i","slice","concat","colorChange","App","useState","setData","showData","setShowData","useEffect","a","colors","forEach","obj","rgb","hex","join","toUpperCase","cmyk","backgroundElement","style","backgroundColor","type","onKeyDown","e","keyCode","val","target","value","trim","RegExp","$1","$2","$3","results","split","r2","g2","b2","abs","similarity","sqrt","sort","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3669f7bb.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Table(props) {\n    let attr = []\n    return (\n        <table className={props.className}>\n            <thead>\n                <tr>\n                    {props.columns.map((item, index) => {\n                        attr.push(item.prop)\n                        return <th key={index}>{item.label}</th>\n                    })}\n                </tr>\n            </thead>\n            <tbody>\n                {props.data.map((data, index) => {\n                    return (\n                        <tr key={index}>\n                            {attr.map((item, index2) => {\n                                if (React.isValidElement(data[item])) {\n                                    return React.cloneElement(data[item],{\n                                        key: index2\n                                    })\n                                }\n                                return <td key={index2}>{data[item]}</td>\n                            })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n    )\n}\n","export function RGBToCMYK(str) {\n    let [r, g, b] = str.match(/(\\d+(?=(,|\\s?)))/g)\n\n    let [c, m, y, k] = [0, 0, 0, 0]\n\n    if (r === 0 && g === 0 && b === 0) {\n        k = 1\n        return [0, 0, 0, 1]\n    }\n\n    c = 1 - (r / 255)\n    m = 1 - (g / 255)\n    y = 1 - (b / 255)\n\n    let minCMY = Math.min(c, Math.min(m, y))\n    c = (c - minCMY) / (1 - minCMY)\n    m = (m - minCMY) / (1 - minCMY)\n    y = (y - minCMY) / (1 - minCMY)\n    k = minCMY\n\n    return [\n        parseInt(c * 100),\n        parseInt(m * 100),\n        parseInt(y * 100),\n        parseInt(k * 100)\n    ]\n}\n\nexport function HextoRGB(str) {\n    let reg = /^#([0-9a-f]{3}|[0-9a-f]{6})$/\n    let color = str.toLowerCase()\n    if (reg.test(color)) {\n        if (color.length === 4) {\n            let colorNew = \"#\"\n            for (let i = 1; i < 4; i++) {\n                colorNew += color.slice(i, i + 1).concat(color.slice(i, i + 1))\n            }\n            color = colorNew\n        }\n        let colorChange = []\n        for (let i = 1; i < 7; i += 2) {\n            colorChange.push(parseInt(\"0x\" + color.slice(i, i + 2)))\n        }\n        return colorChange\n    } else {\n        return color\n    }\n}","import React, { useEffect, useState} from 'react';\nimport Table from './components/Table';\nimport { HextoRGB, RGBToCMYK } from './utils'\nimport './App.css'\n\nexport default function App() {\n  const [data, setData] = useState([])\n  const [showData, setShowData] = useState([])\n  useEffect(() => {\n    (async () => {\n      let { colors } = await import('./data/xkcd.json')\n      colors.forEach(obj => {\n        obj.rgb = HextoRGB(obj.hex).join(', ')\n        obj.hex = obj.hex.toUpperCase()\n        obj.cmyk = RGBToCMYK(obj.rgb).join(', ')\n        obj.backgroundElement = <td style={{ backgroundColor: obj.hex }}></td>\n      })\n      setData(colors)\n      setShowData(colors.length > 50 ? colors.slice(0, 50) : colors)\n    })();\n    return () => {\n      setData(null)\n      setShowData(null)\n    }\n  }, [])\n  const searchKeyDownEvent = (e) => {\n    if (e.keyCode !== 13) {\n      return\n    }\n    let val = e.target.value.trim()\n    let [r, g, b] = []\n    if (/^(#[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(val)) {\n      [r, g, b] = HextoRGB(RegExp.$1)\n    }\n    if (/^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/i.test(val)) {\n      [r, g, b] = [RegExp.$1, RegExp.$2, RegExp.$3]\n    }\n    if (!r) {\n      return\n    }\n    let results = []\n    data.forEach((obj) => {\n      let [r2, g2, b2] = obj.rgb.split(', ')\n      if (Math.abs(r - r2) < 255 * (0.28) &&\n        Math.abs(g - g2) < 255 * (0.28) &&\n        Math.abs(b - b2) < 255 * (0.28)) {\n        results.push({\n          ...obj,\n          similarity: Math.sqrt((r - r2) * (r - r2) + (g - g2) * (g - g2) + (b - b2) * (b - b2))\n        })\n        return true\n      }\n    });\n    results.sort((a, b) => a.similarity - b.similarity)\n    setShowData(results.length > 50 ? results.slice(0, 50) : results)\n  }\n  return (\n    <div>\n      <h1>Colors</h1>\n      <input type=\"search\" className=\"search-input\" onKeyDown={searchKeyDownEvent} />\n      <Table\n        className=\"color-table\"\n        columns={[\n          { prop: 'backgroundElement' },\n          { label: 'Name', prop: 'color' },\n          { label: 'Hex', prop: 'hex' },\n          { label: 'RGB', prop: 'rgb' },\n          { label: 'CMYK', prop: 'cmyk' },\n        ]}\n        data={showData}\n      ></Table>\n    </div>\n  )\n} \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'; \n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}